
These antialiased '.txf' fonts were generated by Andrew Ross from
Ghostscript fonts using his afm2txf script which can be found in the
'tools' area of PLIB. All Ghostscript fonts used were GPL and Copyright
(C) URW++ Design & Development Incorporated.


Things that make them better than existing fonts are (quoted from Andrew):

+ They are complete.  Each one has glyphs rendered for every printable
  ASCII character.  No more property confusion from different strings
  rendering identically due to missing glyphs.  This alone is enough
  to make them worth the price of admission. :)

+ They are rendered and antialiased from vector descriptions, instead
  of being pixel-for-pixel copies of X11 screen fonts.  So they look a
  lot better under most conditions (at very small sizes the difference
  is negligible as mipmapping does the antialiasing for you).

+ They have more space around the glyphs.  Mark Kilgard's 'gentexfont'
  program packed the glyphs too tightly togther; at small sizes, you could
  see "bleeding" in the textures from nearby characters.

+ They make better use of space in general. The characters are drawn
  as large as practical for simple layout code (i.e., I scale them up,
  but don't do any gymnastics like recursive packing or non-rectangular
  layout).  So you get more font for your texture byte.  Most of the
  existing '.txf' fonts use only about half of the available texture
  space.

+ They are professional fonts.  I don't know where "typewriter.txf"
  came from, but it is awfully ugly.  I replaced it with the antialiased
  Helvetica (in FlightGear), and things look *so* much nicer.


Stuff that isn't ideal:

+ They're stored as 8 bit gray scale images instead of bitmaps, which
  means that the files are significantly larger.  The texture memory
  footprint is the same, however.


Note that you still find the inferior textured fonts that came with PLIB
before in the 'old' directory.


- Sebastian Ude, August 2002

