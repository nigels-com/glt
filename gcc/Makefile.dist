default: recurse

##
## BACKUP
##

# File matching logic for SRC backup

DIST_EXT += .c .h .cpp .hpp   		# C and C++ sources and headers
DIST_EXT += .rc .ico 		  		# Windows resources and icons
DIST_EXT += .iss			  		# Inno-Setup script
DIST_EXT += .y .l			  		# Yacc/Bison parsers and Flex scanners
DIST_EXT += .iv				  		# Open Inventor objects
DIST_EXT += .dsp .dsw         		# MSVC 6.0 projects and workspaces
DIST_EXT += .sln .vcproj      		# MSVC .NET projects and workspaces
DIST_EXT += .dev                    # Dev C++ project files
DIST_EXT += .def              		# MSVC DLL definition file
DIST_EXT += .stroke			  		# GLUT stroke fonts
DIST_EXT += .cfg              		# Doxygen configuration
DIST_EXT += .txt .dox .css .html 	# Text and HTML files
DIST_EXT += .1 .3 .5				# Unix man pages
DIST_EXT += .cg						# NVIDIA Cg shaders
DIST_EXT += .sh						# Unix shell scripts
DIST_EXT += .ok						# Test results
DIST_EXT += .doc					# MS Word documents

# Path exclusion logic for SRC backup

DIST_EXCLUDE += ^glt/bin/
DIST_EXCLUDE += ^glt/lib/
DIST_EXCLUDE += ^glt/msvc/Debug/
DIST_EXCLUDE += ^glt/msvc/Release/
DIST_EXCLUDE += ^glt/devcpp/bin/
DIST_EXCLUDE += ^glt/devcpp/lib/
DIST_EXCLUDE += ^glt/devcpp/tmp/
DIST_EXCLUDE += Makefile.win
DIST_EXCLUDE += ^glt/doc/html/
DIST_EXCLUDE += ^glt/doc/man/
DIST_EXCLUDE += ^glt/src/Inventor/
DIST_EXCLUDE += ^glt/src/freetype/
DIST_EXCLUDE += ^glt/src/openvrml/
DIST_EXCLUDE += ^glt/src/gmp/
DIST_EXCLUDE += ^glt/src/cpw/
DIST_EXCLUDE += ^glt/src/ga/
DIST_EXCLUDE += ^glt/src/purenum/
DIST_EXCLUDE += ^glt/src/SDL/
DIST_EXCLUDE += ^glt/src/SDL_image/
DIST_EXCLUDE += ^glt/src/SDL_mixer/
DIST_EXCLUDE += ~
DIST_EXCLUDE += .bak

# File matching logic for DATA backup

DATA_EXT += .ppm .ppm.gz .pgm .pgm.gz .bmp .png .tga .gif 	# Images
DATA_EXT += .fnt 											# Fonts
DATA_EXT += .wrl											# VRML
DATA_EXT += .dat											# Generic data

# File exclusion logic for DATA backup

DATA_EXCLUDE += ^glt/bin/
DATA_EXCLUDE += ^glt/lib/
DATA_EXCLUDE += ^glt/msvc/
DATA_EXCLUDE += ^glt/devcpp/
DATA_EXCLUDE += ^glt/doc/html/
DATA_EXCLUDE += ^glt/doc/man/
DATA_EXCLUDE += ^glt/src/research/
DATA_EXCLUDE += ~
DATA_EXCLUDE += .bak

.PHONY: backup backup-src backup-data 

backup: backup-src backup-data

backup-src: 
	rm -f .files
	for i in $(DIST_EXT); do find -type f -name "*$$i" >> .files; done
	find ./ -type f -name "Make*"    >> .files    # Makefiles
	sed s/\^./glt/ .files | sort > .files2
	rm -f .files
	for i in $(DIST_EXCLUDE); do grep -v "$$i" .files2 > .files; mv .files .files2; done
	mv .files2 .files
	tar cvzf gltSrc`date +%Y%m%d`.tgz -T .files -C ../

backup-data:
	rm -f .files
	for i in $(DATA_EXT); do find -type f -name "*$$i" >> .files; done
	sed s/\^./glt/ .files | sort > .files2
	rm -f .files
	for i in $(DATA_EXCLUDE); do grep -v "$$i" .files2 > .files; mv .files .files2; done
	mv .files2 .files
	tar cvzf gltData`date +%Y%m%d`.tgz -T .files -C ../

##
## DIST
##

.PHONY: dist-core dist-example dist-glut dist-unifont dist-png dist-jpeg dist-glui dist-zzip dist-zpr dist-csg
.PHONY: dist-util-win32 dist-example-win32
.PHONY: dist-doxygen

dist:   dist-core dist-example dist-glut dist-unifont dist-png dist-jpeg dist-glui dist-zzip dist-zpr dist-csg

dist-win32: dist-util-win32 dist-example-win32

GLT_VERSION=0.8-rc3b

GLT_CORE=glt-core-$(GLT_VERSION)
GLT_EXAMPLE=glt-example-$(GLT_VERSION)
GLT_UNIFONT=glt-unifont-$(GLT_VERSION)
GLT_GLUT=glt-glut-$(GLT_VERSION)
GLT_PNG=glt-png-$(GLT_VERSION)
GLT_JPEG=glt-jpeg-$(GLT_VERSION)
GLT_GLUI=glt-glui-$(GLT_VERSION)
GLT_ZZIP=glt-zzip-$(GLT_VERSION)
GLT_CSG=glt-csg-$(GLT_VERSION)

GLT_UTIL_WIN32=glt-util-win32-$(GLT_VERSION)
GLT_EXAMPLE_WIN32=glt-example-win32-$(GLT_VERSION)
GLT_DOX=glt-dox-$(GLT_VERSION)
 
ZPR_VERSION=0.4
GLT_ZPR=glt-zpr-$(ZPR_VERSION)

dist-core:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/glt/"             .files >> .files2
	grep "^glt/src/glutm/"           .files >> .files2
	grep "^glt/src/fonts/"           .files >> .files2
	grep "^glt/src/math/"            .files >> .files2
	grep "^glt/src/mesh/"            .files >> .files2
	grep "^glt/src/misc/"            .files >> .files2
	grep "^glt/src/node/"            .files >> .files2
	grep "^glt/src/zlib/"            .files >> .files2
	grep "^glt/src/program/test/"    .files >> .files2
	grep "^glt/src/program/util/"    .files >> .files2
	grep "^glt/src/program/gltVrml/" .files >> .files2
	echo "glt/src/program/gltVrml/sample.wrl" >> .files2
	grep "^glt/gcc/"                 .files >> .files2
	grep "^glt/doc/"                 .files >> .files2
	grep "^glt/msvc/glt.dsw"         .files >> .files2
	grep "^glt/msvc/test.dsw"        .files >> .files2
	grep "^glt/msvc/util.dsw"        .files >> .files2
	grep "^glt/msvc/glt/"            .files >> .files2
	grep "^glt/msvc/test/"           .files >> .files2
	grep "^glt/msvc/util/"	         .files >> .files2
	grep "^glt/Makefile"             .files >> .files2
	grep "^glt/src/Makefile"         .files >> .files2
	grep "^glt/src/program/Makefile" .files >> .files2
	tar cvzf            $(GLT_CORE).tgz -T .files2 -C ../ 
	cd ..; zip -9u@ glt/$(GLT_CORE).zip < glt/.files2; cd glt

dist-example:
	tar tzf gltSrc`date +%Y%m%d`.tgz                      > .files
	printf ""                                             > .files2
	grep    "^glt/src/program/example/"          .files  >> .files2
	grep    "^glt/msvc/example.dsw"              .files  >> .files2
	grep    "^glt/msvc/example/"                 .files  >> .files2
	grep    "^glt/src/program/gltChaos/"         .files  >> .files2
	grep    "^glt/src/program/gltLife/"          .files  >> .files2
	grep    "^glt/msvc/gltChaos."                .files  >> .files2
	grep    "^glt/msvc/gltLife."                 .files  >> .files2
	grep -v "^glt/src/program/example/unifonte/" .files2 >  .files3
	tar cvzf            $(GLT_EXAMPLE).tgz -T .files3 -C ../
	cd ..; zip -9u@ glt/$(GLT_EXAMPLE).zip < glt/.files3; cd glt

dist-unifont:
	tar tzf gltSrc`date +%Y%m%d`.tgz                  > .files
	printf ""                                         > .files2
	grep "^glt/src/unifont/"                  .files >> .files2
	grep "^glt/src/program/example/unifonte/" .files >> .files2
	grep "^glt/msvc/unifont.dsw"              .files >> .files2
	grep "^glt/msvc/unifont/"                 .files >> .files2
	tar cvzf            $(GLT_UNIFONT).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_UNIFONT).zip < glt/.files2; cd glt

dist-glut:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/glut/"            .files >> .files2
	grep "^glt/src/GL/glut"          .files >> .files2
	grep "^glt/msvc/glut32."         .files >> .files2
	tar cvzf            $(GLT_GLUT).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_GLUT).zip < glt/.files2; cd glt

dist-glui:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/glui/"            .files >> .files2
	grep "^glt/src/GL/glui.h"        .files >> .files2
	grep "^glt/src/program/glui/"    .files >> .files2
	grep "^glt/msvc/glui.dsw"        .files >> .files2
	grep "^glt/msvc/glui/"           .files >> .files2
	tar cvzf            $(GLT_GLUI).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_GLUI).zip < glt/.files2; cd glt

dist-zzip:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/zzip/"             .files >> .files2
	grep "^glt/src/program/zzip/"     .files >> .files2
	grep "^glt/msvc/zzip.dsw"         .files >> .files2
	grep "^glt/msvc/zzip/"            .files >> .files2
	tar cvzf            $(GLT_ZZIP).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_ZZIP).zip < glt/.files2; cd glt

dist-png:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/png/"             .files >> .files2
	grep "^glt/msvc/png.dsw"         .files >> .files2
	grep "^glt/msvc/libs/png.dsp"    .files >> .files2
	tar cvzf            $(GLT_PNG).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_PNG).zip < glt/.files2; cd glt

dist-jpeg:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/jpeg/"             .files >> .files2
	grep "^glt/msvc/jpeg.dsw"         .files >> .files2
	grep "^glt/msvc/jpeg.dsp"         .files >> .files2
	tar cvzf            $(GLT_JPEG).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_JPEG).zip < glt/.files2; cd glt

dist-zpr:
	tar tzf gltSrc`date +%Y%m%d`.tgz        > .files
	printf ""                               > .files2
	grep "^glt/src/program/gltZpr/"	.files >> .files2
	grep "^glt/msvc/gltZpr"		.files >> .files2
	tar cvzf            $(GLT_ZPR).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_ZPR).zip < glt/.files2; cd glt
	
dist-csg:
	tar tzf gltSrc`date +%Y%m%d`.tgz         > .files
	printf ""                                > .files2
	grep "^glt/src/csg/"             .files >> .files2
	grep "^glt/src/program/csg/"     .files >> .files2
	grep "^glt/msvc/csg.dsw"         .files >> .files2
	grep "^glt/msvc/csgutil.dsw"     .files >> .files2
	grep "^glt/msvc/csg/"            .files >> .files2
	tar cvzf            $(GLT_CSG).tgz -T .files2 -C ../
	cd ..; zip -9u@ glt/$(GLT_CSG).zip < glt/.files2; cd glt

#
# WIN32 Binary Packages
#


dist-util-win32:
	find src/program/util/ -name "*.cpp" | cut -d / -f 4 > .files
	sed s/.cpp/.exe/ < .files                            > .files2
	cd msvc/Release; \
	upx -9  `cat ../../.files2`;  \
	zip -9u@ ../../$(GLT_UTIL_WIN32).zip < ../../.files2
	
dist-example-win32:
	find src/program/example/* -type d -maxdepth 0 | cut -d / -f 4 > .files
	for i in `cat .files`; do printf "%s.exe\n" $$i; done > .files2
	cd msvc/Release; \
	upx -9  `cat ../../.files2`;  \
	zip -9u@ ../../$(GLT_EXAMPLE_WIN32).zip < ../../.files2

#
# Doxygen
#

dist-doxygen:
	cd $(ROOT)
	find doc/html -type f > .files
	sed "s/^/glt\//" < .files > .files2
	tar cvzf $(GLT_DOX).tgz -T .files2 -C ../

